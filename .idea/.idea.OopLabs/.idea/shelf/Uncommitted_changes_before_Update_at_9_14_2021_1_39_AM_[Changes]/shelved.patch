Index: Isu.Tests/IsuServiceTest.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>using Isu.Objects;\r\nusing Isu.Services;\r\nusing Isu.Tools;\r\nusing NUnit.Framework;\r\n\r\nnamespace Isu.Tests\r\n{\r\n    public class Tests\r\n    {\r\n        private IIsuService _isuService;\r\n\r\n        [SetUp]\r\n        public void Setup()\r\n        {\r\n            //TODO: implement\r\n            _isuService = new IsuService();\r\n        }\r\n\r\n        [Test]\r\n        public void AddStudentToGroup_StudentHasGroupAndGroupContainsStudent()\r\n        {\r\n            // Arrange\r\n            var expectedStudentName = \"Annemaria Repenko\";\r\n            var expectedGroupName = \"M3206\";\r\n            Group group = _isuService.AddGroup(expectedGroupName);\r\n            \r\n            // Act\r\n            Student student = _isuService.AddStudent(group, expectedStudentName);\r\n\r\n            // Assert\r\n            Assert.AreEqual(expectedGroupName, student.GetGroupName());\r\n            Assert.AreEqual(expectedStudentName, group.GetStudent(student.GetName()).GetName());\r\n        }\r\n\r\n        [Test]\r\n        public void ReachMaxStudentPerGroup_ThrowException()\r\n        {\r\n            Assert.Catch<IsuException>(() =>\r\n            {\r\n                Group group = _isuService.AddGroup(\"M3206\");\r\n                _isuService.AddStudent(group, \"Victor Odinets\");\r\n                _isuService.AddStudent(group, \"Ilya Antipin\");\r\n                _isuService.AddStudent(group, \"Nikolay Kondratev\");\r\n                _isuService.AddStudent(group, \"Annemaria Repenko\");\r\n                _isuService.AddStudent(group, \"Nikolay Belyanin\");\r\n                _isuService.AddStudent(group, \"Andrew Orlov\");\r\n                _isuService.AddStudent(group, \"Daniil Shevchuk\");\r\n                _isuService.AddStudent(group, \"Matvey Chernishev\");\r\n                _isuService.AddStudent(group, \"Kirill Poznyansky\");\r\n                _isuService.AddStudent(group, \"Oleg Podshivalov\");\r\n                _isuService.AddStudent(group, \"Igor Kulyaev\");\r\n                _isuService.AddStudent(group, \"Mikhail Tarasov\");\r\n                _isuService.AddStudent(group, \"Alexander Bosov\");\r\n                _isuService.AddStudent(group, \"Konstantin Adreanov\");\r\n                _isuService.AddStudent(group, \"Alexander Svistunov\");\r\n                _isuService.AddStudent(group, \"Vladimir Eremchenko\");\r\n            });\r\n        }\r\n\r\n        [Test]\r\n        public void CreateGroupWithInvalidName_ThrowException()\r\n        {\r\n            Assert.Catch<IsuException>(() =>\r\n            {\r\n                _isuService = new IsuService();\r\n                _isuService.AddGroup(\"N2940\");\r\n            });\r\n        }\r\n\r\n        [Test]\r\n        public void TransferStudentToAnotherGroup_GroupChanged()\r\n        {\r\n            Assert.Catch<IsuException>(() =>\r\n            {\r\n                _isuService = new IsuService();\r\n                Group group = _isuService.AddGroup(\"M3206\");\r\n                Group newGroup = _isuService.AddGroup(\"M3111\");\r\n                Student student = _isuService.AddStudent(group, \"Annemaria Repenko\");\r\n                _isuService.ChangeStudentGroup(student, newGroup);\r\n            });\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Isu.Tests/IsuServiceTest.cs b/Isu.Tests/IsuServiceTest.cs
--- a/Isu.Tests/IsuServiceTest.cs	(revision fa7c11c240746890a0c27f7c6b1cf65d067a299b)
+++ b/Isu.Tests/IsuServiceTest.cs	(date 1631572620250)
@@ -13,23 +13,22 @@
         public void Setup()
         {
             //TODO: implement
-            _isuService = new IsuService();
+            _isuService = null;
         }
 
         [Test]
         public void AddStudentToGroup_StudentHasGroupAndGroupContainsStudent()
         {
             // Arrange
-            var expectedStudentName = "Annemaria Repenko";
-            var expectedGroupName = "M3206";
-            Group group = _isuService.AddGroup(expectedGroupName);
+            _isuService = new IsuService();
+            Group group = _isuService.AddGroup("M3206");
             
             // Act
-            Student student = _isuService.AddStudent(group, expectedStudentName);
+            Student student = _isuService.AddStudent(group, "Annemaria Repenko");
 
             // Assert
-            Assert.AreEqual(expectedGroupName, student.GetGroupName());
-            Assert.AreEqual(expectedStudentName, group.GetStudent(student.GetName()).GetName());
+            Assert.AreEqual(group.GetName(), student.GetGroupName());
+            Assert.AreEqual(student.GetName(), group.GetStudent(student.GetName()).GetName());
         }
 
         [Test]
@@ -37,6 +36,7 @@
         {
             Assert.Catch<IsuException>(() =>
             {
+                _isuService = new IsuService();
                 Group group = _isuService.AddGroup("M3206");
                 _isuService.AddStudent(group, "Victor Odinets");
                 _isuService.AddStudent(group, "Ilya Antipin");
Index: Isu/Objects/Group.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>using System.Collections.Generic;\r\nusing System.Linq;\r\nusing Isu.Tools;\r\n\r\nnamespace Isu.Objects\r\n{\r\n    public class Group\r\n    {\r\n        private readonly string _name;\r\n        private readonly int _course;\r\n        private readonly List<Student> _students;\r\n\r\n        public Group(string name, int number)\r\n        {\r\n            _name = name;\r\n            _students = new List<Student>();\r\n            _course = number;\r\n        }\r\n\r\n        public string GetName()\r\n        {\r\n            return _name;\r\n        }\r\n\r\n        public List<Student> GetStudents()\r\n        {\r\n            return _students;\r\n        }\r\n\r\n        public int GetCourseNumber()\r\n        {\r\n            return _course;\r\n        }\r\n\r\n        public void AddStudent(string studentName, int id)\r\n        {\r\n            var newStudent = new Student(studentName, id);\r\n            _students.Add(newStudent);\r\n            newStudent.AddGroupToStudent(_name);\r\n        }\r\n\r\n        public Student GetStudent(string name)\r\n        {\r\n            return _students.FirstOrDefault(student => student.GetName() == name);\r\n        }\r\n\r\n        public Student FindStudent(int id)\r\n        {\r\n            return _students.FirstOrDefault(student => student.GetId() == id);\r\n        }\r\n\r\n        public void RemoveStudent(Student student)\r\n        {\r\n            _students.Remove(student);\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Isu/Objects/Group.cs b/Isu/Objects/Group.cs
--- a/Isu/Objects/Group.cs	(revision fa7c11c240746890a0c27f7c6b1cf65d067a299b)
+++ b/Isu/Objects/Group.cs	(date 1631572620251)
@@ -41,12 +41,12 @@
 
         public Student GetStudent(string name)
         {
-            return _students.FirstOrDefault(student => student.GetName() == name);
-        }
+            foreach (Student student in _students.Where(i => i.GetName() == name))
+            {
+                return student;
+            }
 
-        public Student FindStudent(int id)
-        {
-            return _students.FirstOrDefault(student => student.GetId() == id);
+            throw new IsuException("Student with this name doesn't exist");
         }
 
         public void RemoveStudent(Student student)
Index: Isu/Objects/Student.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>namespace Isu.Objects\r\n{\r\n    public class Student\r\n    {\r\n        private readonly string _name;\r\n        private readonly int _id;\r\n        private string _group;\r\n        private int _course;\r\n\r\n        public Student(string name, int id)\r\n        {\r\n            _name = name;\r\n            _group = null;\r\n            _id = id;\r\n            _course = 0;\r\n        }\r\n\r\n        public string GetName()\r\n        {\r\n            return _name;\r\n        }\r\n\r\n        public int GetId()\r\n        {\r\n            return _id;\r\n        }\r\n\r\n        public string GetGroupName()\r\n        {\r\n            return _group;\r\n        }\r\n\r\n        public void AddGroupToStudent(string groupName)\r\n        {\r\n            _group = groupName;\r\n            int.TryParse(groupName.Substring(2, 1), out _course);\r\n        }\r\n\r\n        public int GetCourseNumber()\r\n        {\r\n            return _course;\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Isu/Objects/Student.cs b/Isu/Objects/Student.cs
--- a/Isu/Objects/Student.cs	(revision fa7c11c240746890a0c27f7c6b1cf65d067a299b)
+++ b/Isu/Objects/Student.cs	(date 1631572620252)
@@ -2,6 +2,8 @@
 {
     public class Student
     {
+        private const int CourseIndex = 2;
+
         private readonly string _name;
         private readonly int _id;
         private string _group;
@@ -33,7 +35,7 @@
         public void AddGroupToStudent(string groupName)
         {
             _group = groupName;
-            int.TryParse(groupName.Substring(2, 1), out _course);
+            _course = _group[CourseIndex] - '0';
         }
 
         public int GetCourseNumber()
Index: Isu/Services/IsuService.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>using System;\r\nusing System.Collections.Generic;\r\nusing System.Linq;\r\nusing Isu.Objects;\r\nusing Isu.Tools;\r\n\r\nnamespace Isu.Services\r\n{\r\n    public class IsuService : IIsuService\r\n    {\r\n        private const int MaxStudentsInGroup = 15;\r\n        private const int GroupLength = 5;\r\n\r\n        private readonly List<Group> _groups;\r\n        private int _idCounter;\r\n\r\n        public IsuService()\r\n        {\r\n            _groups = new List<Group>();\r\n            _idCounter = 0;\r\n        }\r\n\r\n        public Group AddGroup(string name)\r\n        {\r\n            if (name.Length != GroupLength || !name.StartsWith(\"M3\")) throw new IsuException(\"Invalid group name\");\r\n\r\n            int.TryParse(name.Substring(2, 1), out int course);\r\n            if (course > 4 || course == 0) throw new IsuException(\"Invalid group name\");\r\n            var newGroup = new Group(name, course);\r\n            _groups.Add(newGroup);\r\n            return newGroup;\r\n        }\r\n\r\n        public Student AddStudent(Group group, string name)\r\n        {\r\n            if (@group.GetStudents().Count >= MaxStudentsInGroup) throw new IsuException(\"Too many students in current group\");\r\n\r\n            _idCounter++;\r\n            @group.AddStudent(name, _idCounter);\r\n            return @group.GetStudent(name);\r\n        }\r\n\r\n        public Student GetStudent(int id)\r\n        {\r\n            foreach (Student student in _groups.SelectMany(@group => @group.GetStudents().Where(student => student.GetId() == id)))\r\n            {\r\n                return student;\r\n            }\r\n\r\n            throw new IsuException(\"The student with current id doesn't exist\");\r\n        }\r\n\r\n        public Student FindStudent(string name)\r\n        {\r\n            foreach (Student student in _groups.SelectMany(@group => @group.GetStudents().Where(student => student.GetName() == name)))\r\n            {\r\n                return student;\r\n            }\r\n\r\n            throw new IsuException(\"Unable to find the student with current name\");\r\n        }\r\n\r\n        public List<Student> FindStudents(string groupName)\r\n        {\r\n            foreach (Group group in _groups.Where(@group => @group.GetName() == groupName))\r\n            {\r\n                return group.GetStudents();\r\n            }\r\n\r\n            throw new IsuException(\"Unable to find students in current group\");\r\n        }\r\n\r\n        public List<Student> FindStudents(CourseNumber courseNumber)\r\n        {\r\n            return _groups.Where(@group => @group.GetCourseNumber() == courseNumber.GetNumber()).SelectMany(@group => @group.GetStudents()).ToList();\r\n        }\r\n\r\n        public Group FindGroup(string groupName)\r\n        {\r\n            foreach (Group @group in _groups.Where(@group => @group.GetName() == groupName))\r\n            {\r\n                return group;\r\n            }\r\n\r\n            throw new IsuException(\"Unable to find group with current name\");\r\n        }\r\n\r\n        public List<Group> FindGroups(CourseNumber courseNumber)\r\n        {\r\n            return _groups.Where(@group => @group.GetCourseNumber() == courseNumber.GetNumber()).ToList();\r\n        }\r\n\r\n        public void ChangeStudentGroup(Student student, Group newGroup)\r\n        {\r\n            if (newGroup.GetName() == student.GetGroupName()) throw new IsuException(\"Student is already in the current group\");\r\n            if (student.GetCourseNumber() != newGroup.GetCourseNumber()) throw new IsuException(\"Student cannot be transferred to the different course\");\r\n\r\n            foreach (Group @group in _groups.Where(@group => @group.GetName() == student.GetGroupName()))\r\n            {\r\n                @group.RemoveStudent(student);\r\n            }\r\n\r\n            newGroup.AddStudent(student.GetName(), student.GetId());\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Isu/Services/IsuService.cs b/Isu/Services/IsuService.cs
--- a/Isu/Services/IsuService.cs	(revision fa7c11c240746890a0c27f7c6b1cf65d067a299b)
+++ b/Isu/Services/IsuService.cs	(date 1631572620253)
@@ -1,4 +1,3 @@
-using System;
 using System.Collections.Generic;
 using System.Linq;
 using Isu.Objects;
@@ -10,13 +9,16 @@
     {
         private const int MaxStudentsInGroup = 15;
         private const int GroupLength = 5;
+        private const int CourseIndex = 2;
 
         private readonly List<Group> _groups;
+        private readonly List<Student> _students;
         private int _idCounter;
 
         public IsuService()
         {
             _groups = new List<Group>();
+            _students = new List<Student>();
             _idCounter = 0;
         }
 
@@ -24,9 +26,9 @@
         {
             if (name.Length != GroupLength || !name.StartsWith("M3")) throw new IsuException("Invalid group name");
 
-            int.TryParse(name.Substring(2, 1), out int course);
-            if (course > 4 || course == 0) throw new IsuException("Invalid group name");
-            var newGroup = new Group(name, course);
+            int courseNumber = name[CourseIndex] - '0';
+            if (courseNumber > 4) throw new IsuException("Invalid group name");
+            var newGroup = new Group(name, courseNumber);
             _groups.Add(newGroup);
             return newGroup;
         }
@@ -37,12 +39,16 @@
 
             _idCounter++;
             @group.AddStudent(name, _idCounter);
+            _students.Add(group.GetStudent(name));
             return @group.GetStudent(name);
         }
 
         public Student GetStudent(int id)
         {
-            foreach (Student student in _groups.SelectMany(@group => @group.GetStudents().Where(student => student.GetId() == id)))
+            foreach (Student student in from @group in _groups
+                from student in @group.GetStudents()
+                where student.GetId() == id
+                select student)
             {
                 return student;
             }
@@ -52,7 +58,7 @@
 
         public Student FindStudent(string name)
         {
-            foreach (Student student in _groups.SelectMany(@group => @group.GetStudents().Where(student => student.GetName() == name)))
+            foreach (Student student in _students.Where(student => student.GetName() == name))
             {
                 return student;
             }
@@ -62,7 +68,7 @@
 
         public List<Student> FindStudents(string groupName)
         {
-            foreach (Group group in _groups.Where(@group => @group.GetName() == groupName))
+            foreach (Group @group in _groups.Where(@group => @group.GetName() == groupName))
             {
                 return group.GetStudents();
             }
@@ -72,7 +78,7 @@
 
         public List<Student> FindStudents(CourseNumber courseNumber)
         {
-            return _groups.Where(@group => @group.GetCourseNumber() == courseNumber.GetNumber()).SelectMany(@group => @group.GetStudents()).ToList();
+            return _students.Where(student => student.GetCourseNumber() == courseNumber.GetNumber()).ToList();
         }
 
         public Group FindGroup(string groupName)
@@ -100,7 +106,9 @@
                 @group.RemoveStudent(student);
             }
 
+            _students.Remove(student);
             newGroup.AddStudent(student.GetName(), student.GetId());
+            _students.Add(student);
         }
     }
 }
\ No newline at end of file
Index: .idea/.idea.OopLabs/.idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/.idea.OopLabs/.idea/workspace.xml b/.idea/.idea.OopLabs/.idea/workspace.xml
new file mode 100644
--- /dev/null	(date 1631572620260)
+++ b/.idea/.idea.OopLabs/.idea/workspace.xml	(date 1631572620260)
@@ -0,0 +1,74 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="AutoGeneratedRunConfigurationManager">
+    <projectFile>Isu/Isu.csproj</projectFile>
+    <projectFile>IsuExtra/IsuExtra.csproj</projectFile>
+    <projectFile>Shops/Shops.csproj</projectFile>
+    <projectFile>Backups/Backups.csproj</projectFile>
+    <projectFile>BackupsExtra/BackupsExtra.csproj</projectFile>
+    <projectFile>Banks/Banks.csproj</projectFile>
+  </component>
+  <component name="AutoImportSettings">
+    <option name="autoReloadType" value="SELECTIVE" />
+  </component>
+  <component name="ChangeListManager">
+    <list default="true" id="b10048eb-91dc-495d-aace-1214fea43813" name="Changes" comment="">
+<<<<<<< Updated upstream
+      <change beforePath="$PROJECT_DIR$/Isu.Tests/IsuServiceTest.cs" beforeDir="false" afterPath="$PROJECT_DIR$/Isu.Tests/IsuServiceTest.cs" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Isu/Objects/Group.cs" beforeDir="false" afterPath="$PROJECT_DIR$/Isu/Objects/Group.cs" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Isu/Objects/Student.cs" beforeDir="false" afterPath="$PROJECT_DIR$/Isu/Objects/Student.cs" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Isu/Services/IsuService.cs" beforeDir="false" afterPath="$PROJECT_DIR$/Isu/Services/IsuService.cs" afterDir="false" />
+=======
+      <change afterPath="$PROJECT_DIR$/.idea/.idea.OopLabs/.idea/shelf/Uncommitted_changes_before_Checkout_at_9_13_2021_3_47_PM_[Changes]/shelved.patch" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/.idea.OopLabs/.idea/shelf/Uncommitted_changes_before_Checkout_at_9_13_2021_3_47_PM_[Changes]1/shelved.patch" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/.idea.OopLabs/.idea/shelf/Uncommitted_changes_before_Checkout_at_9_13_2021_3_47_PM__Changes_.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/.idea.OopLabs/.idea/workspace.xml" afterDir="false" />
+>>>>>>> Stashed changes
+    </list>
+    <option name="SHOW_DIALOG" value="false" />
+    <option name="HIGHLIGHT_CONFLICTS" value="true" />
+    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
+    <option name="LAST_RESOLUTION" value="IGNORE" />
+  </component>
+  <component name="Git.Settings">
+<<<<<<< Updated upstream
+    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
+  </component>
+  <component name="HighlightingSettingsPerFile">
+    <setting file="file://$PROJECT_DIR$/Isu/Services/IsuService.cs" root0="FORCE_HIGHLIGHTING" />
+    <setting file="mock://C:/Users/PC/source/repos/AnnemariaRe/Isu/Services/IIsuService.cs" root0="SKIP_HIGHLIGHTING" />
+    <setting file="file://$PROJECT_DIR$/Isu/Objects/Student.cs" root0="FORCE_HIGHLIGHTING" />
+=======
+    <option name="RECENT_BRANCH_BY_REPOSITORY">
+      <map>
+        <entry key="$PROJECT_DIR$" value="lab-0" />
+      </map>
+    </option>
+    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
+  </component>
+  <component name="HighlightingSettingsPerFile">
+    <setting file="mock://C:/Users/PC/source/repos/AnnemariaRe/Isu/Services/IIsuService.cs" root0="SKIP_HIGHLIGHTING" />
+>>>>>>> Stashed changes
+  </component>
+  <component name="PropertiesComponent">
+    <property name="node.js.selected.package.tslint" value="(autodetect)" />
+  </component>
+  <component name="TaskManager">
+    <servers />
+  </component>
+  <component name="UnityCheckinConfiguration" checkUnsavedScenes="false" />
+  <component name="UnityProjectConfiguration" hasMinimizedUI="false" />
+  <component name="UnityUnitTestConfiguration" currentTestLauncher="Both" />
+  <component name="Vcs.Log.Tabs.Properties">
+    <option name="TAB_STATES">
+      <map>
+        <entry key="MAIN">
+          <value>
+            <State />
+          </value>
+        </entry>
+      </map>
+    </option>
+    <option name="oldMeFiltersMigrated" value="true" />
+  </component>
+</project>
\ No newline at end of file
Index: .idea/.idea.OopLabs/.idea/shelf/Uncommitted_changes_before_Checkout_at_9_13_2021_3_47_PM__Changes_.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/.idea.OopLabs/.idea/shelf/Uncommitted_changes_before_Checkout_at_9_13_2021_3_47_PM__Changes_.xml b/.idea/.idea.OopLabs/.idea/shelf/Uncommitted_changes_before_Checkout_at_9_13_2021_3_47_PM__Changes_.xml
new file mode 100644
--- /dev/null	(date 1631572619940)
+++ b/.idea/.idea.OopLabs/.idea/shelf/Uncommitted_changes_before_Checkout_at_9_13_2021_3_47_PM__Changes_.xml	(date 1631572619940)
@@ -0,0 +1,4 @@
+<changelist name="Uncommitted_changes_before_Checkout_at_9_13_2021_3_47_PM_[Changes]" date="1631537233205" recycled="false" toDelete="true">
+  <option name="PATH" value="$PROJECT_DIR$/.idea/.idea.OopLabs/.idea/shelf/Uncommitted_changes_before_Checkout_at_9_13_2021_3_47_PM_[Changes]/shelved.patch" />
+  <option name="DESCRIPTION" value="Uncommitted changes before Checkout at 9/13/2021 3:47 PM [Changes]" />
+</changelist>
\ No newline at end of file
Index: .idea/.idea.OopLabs/.idea/shelf/Uncommitted_changes_before_Checkout_at_9_13_2021_3_47_PM_[Changes]/shelved.patch
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/.idea.OopLabs/.idea/shelf/Uncommitted_changes_before_Checkout_at_9_13_2021_3_47_PM_[Changes]/shelved.patch b/.idea/.idea.OopLabs/.idea/shelf/Uncommitted_changes_before_Checkout_at_9_13_2021_3_47_PM_[Changes]/shelved.patch
new file mode 100644
--- /dev/null	(date 1631572619936)
+++ b/.idea/.idea.OopLabs/.idea/shelf/Uncommitted_changes_before_Checkout_at_9_13_2021_3_47_PM_[Changes]/shelved.patch	(date 1631572619936)
@@ -0,0 +1,21 @@
+Index: .idea/.idea.OopLabs/.idea/workspace.xml
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoGeneratedRunConfigurationManager\">\r\n    <projectFile>Isu/Isu.csproj</projectFile>\r\n    <projectFile>IsuExtra/IsuExtra.csproj</projectFile>\r\n    <projectFile>Shops/Shops.csproj</projectFile>\r\n    <projectFile>Backups/Backups.csproj</projectFile>\r\n    <projectFile>BackupsExtra/BackupsExtra.csproj</projectFile>\r\n    <projectFile>Banks/Banks.csproj</projectFile>\r\n  </component>\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"b10048eb-91dc-495d-aace-1214fea43813\" name=\"Changes\" comment=\"\">\r\n      <change beforePath=\"$PROJECT_DIR$/Isu.Tests/IsuServiceTest.cs\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Isu.Tests/IsuServiceTest.cs\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/Isu/Isu.csproj\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Isu/Isu.csproj\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/Isu/Program.cs\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Isu/Program.cs\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/Isu/Services/IIsuService.cs\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Isu/Services/IIsuService.cs\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/Isu/Tools/IsuException.cs\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Isu/Tools/IsuException.cs\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"HighlightingSettingsPerFile\">\r\n    <setting file=\"mock://C:/Users/PC/source/repos/AnnemariaRe/Isu/Services/IIsuService.cs\" root0=\"SKIP_HIGHLIGHTING\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">\r\n    <property name=\"node.js.selected.package.tslint\" value=\"(autodetect)\" />\r\n  </component>\r\n  <component name=\"TaskManager\">\r\n    <servers />\r\n  </component>\r\n  <component name=\"UnityCheckinConfiguration\" checkUnsavedScenes=\"false\" />\r\n  <component name=\"UnityProjectConfiguration\" hasMinimizedUI=\"null\" />\r\n  <component name=\"UnityUnitTestConfiguration\" currentTestLauncher=\"Both\" />\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n    <option name=\"oldMeFiltersMigrated\" value=\"true\" />\r\n  </component>\r\n</project>
+===================================================================
+diff --git a/.idea/.idea.OopLabs/.idea/workspace.xml b/.idea/.idea.OopLabs/.idea/workspace.xml
+--- a/.idea/.idea.OopLabs/.idea/workspace.xml	
++++ b/.idea/.idea.OopLabs/.idea/workspace.xml	
+@@ -13,11 +13,7 @@
+   </component>
+   <component name="ChangeListManager">
+     <list default="true" id="b10048eb-91dc-495d-aace-1214fea43813" name="Changes" comment="">
+-      <change beforePath="$PROJECT_DIR$/Isu.Tests/IsuServiceTest.cs" beforeDir="false" afterPath="$PROJECT_DIR$/Isu.Tests/IsuServiceTest.cs" afterDir="false" />
+-      <change beforePath="$PROJECT_DIR$/Isu/Isu.csproj" beforeDir="false" afterPath="$PROJECT_DIR$/Isu/Isu.csproj" afterDir="false" />
+-      <change beforePath="$PROJECT_DIR$/Isu/Program.cs" beforeDir="false" afterPath="$PROJECT_DIR$/Isu/Program.cs" afterDir="false" />
+-      <change beforePath="$PROJECT_DIR$/Isu/Services/IIsuService.cs" beforeDir="false" afterPath="$PROJECT_DIR$/Isu/Services/IIsuService.cs" afterDir="false" />
+-      <change beforePath="$PROJECT_DIR$/Isu/Tools/IsuException.cs" beforeDir="false" afterPath="$PROJECT_DIR$/Isu/Tools/IsuException.cs" afterDir="false" />
++      <change beforePath="$PROJECT_DIR$/.idea/.idea.OopLabs/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/.idea.OopLabs/.idea/workspace.xml" afterDir="false" />
+     </list>
+     <option name="SHOW_DIALOG" value="false" />
+     <option name="HIGHLIGHT_CONFLICTS" value="true" />
diff --git a/.idea/.idea.OopLabs/.idea/shelf/Uncommitted_changes_before_Checkout_at_9_13_2021_3_47_PM_[Changes]1/shelved.patch b/.idea/.idea.OopLabs/.idea/shelf/Uncommitted_changes_before_Checkout_at_9_13_2021_3_47_PM_[Changes]1/shelved.patch
new file mode 100644
